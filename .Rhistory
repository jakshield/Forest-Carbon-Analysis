plot_carbon_stock%>%
group_by(indc_spp)%>%
shapiro_test(carbon_stock)
#Library
library(ggplot2)
library(ggpubr)
library(dplyr)
plot_carbon_stock%>%
group_by(indc_spp)%>%
shapiro_test(carbon_stock)
load("~/GitHub/Forest-Carbon-Analysis/Forest-Carbon-Analysis.Rproj")
plot_carbon_stock<-read.csv("Plot Summary.csv")
tree.data<-read.csv("tree Data.csv")
carbon_stock_analysis.fn<-function(...){
#Create list of inputs and apply biomass function to all elements
data.list<-list(...)
data.list<-lapply(data.list,eren_data_biomass_fn)
data.df<-do.call(rbind, data.list)
grouped<-data.df%>%
group_by(plot.name)%>%
summarise(plot_biomass_kg = sum(tree.biomass),
plot_ba_sqm = sum(basal.area),
carbon_stock = (((((sum(tree.biomass)/1000)/400))*10000)*0.47),
trees_present = n())
#Find most common tree
common<-data.df%>%
group_by(plot.name)%>%
summarise(most_common_tree = names(table(species.code))[which.max(table(species.code))])
#Find tree with greatest total biomass
largest_tree<-data.df%>%
group_by(plot.name, species.code)%>%
summarise(total_tree.biomass = sum(tree.biomass))%>%
slice(which.max(total_tree.biomass))
#Find tree with greatest total volume
volume<-data.df%>%
group_by(plot.name, species.code)%>%
summarise(total_ba = sum(basal.area))%>%
slice(which.max(total_ba))
final<-cbind.data.frame(grouped,common,volume,largest_tree)
final<-final[,c(1,2,3,4,5,7,9,10,12,13)]
colnames(final)<-c("plot.name", "plot.biomass.kg","plot.ba.sqm","carbon.stock_mg/ha","trees.present","most.common.tree", "greatest.ba", "total.species.ba","greatest.bm", "total.species.bm")
return(final)
}
data_biomass_fn<-function(x){
#Coerece DBH to numeric class(just in case)
x$dbh.cm<-as.numeric(x$dbh.cm)
#Convert DBH to centimeters and filter out small/dead stems
z<-x %>%
filter(x$dbh.cm >= 3)
y<-z%>%
filter(z$inventory %in% c("RL","IL","IG"))
#Apply Allometric Equations to Taxonomic Groups
aceraceae_bm<-y%>%
filter(y$species.code %in% c('ACERUB','ACESAC'))
aceraceae_bm<-aceraceae_bm%>%
mutate(abovegroundbiomass = exp((-2.0470+2.3852*log(aceraceae_bm$dbh.cm))))
cornaceae_etc_bm<-y%>%
filter(y$species.code %in% c('AMEARB','CORFLO','NYSSYL','OXYARB','PLAOCC','PRUAVI','PRUSER','PRUVIR','RHOSPP','SASALB','ULMAME','ULMRUB','ULMSPP'))
cornaceae_etc_bm<-cornaceae_etc_bm%>%
mutate(abovegroundbiomass = exp((-2.2118+2.4133*log(cornaceae_etc_bm$dbh.cm))))
fabaceae_carya_bm<-y%>%
filter(y$species.code %in% c('CARCOR','CARGLA','CAROVA','CARPAL','CARTOM','CARSPP'))
fabaceae_carya_bm<-fabaceae_carya_bm%>%
mutate(abovegroundbiomass = exp((-2.5095+2.6175*log(fabaceae_carya_bm$dbh.cm))))
fagaceae_decidious_bm<-y%>%
filter(y$species.code %in% c('FAGGRA','QUEALB','QUECOC','QUEMON','QUERUB','QUEVEL','CASDEN'))
fagaceae_decidious_bm<-fagaceae_decidious_bm%>%
mutate(abovegroundbiomass = exp((-2.0705+2.4410*log(fagaceae_decidious_bm$dbh.cm))))
oleaceae_bm<-y%>%
filter(y$species.code %in% c('FRAAME'))
oleaceae_bm<-oleaceae_bm%>%
mutate(abovegroundbiomass = exp((-1.8384+2.3524*log(oleaceae_bm$dbh.cm))))
hamameldaceae_bm<-y%>%
filter(y$species.code %in% c('HAMVIR'))
hamameldaceae_bm<-hamameldaceae_bm%>%
mutate(abovegroundbiomass = exp((-2.6390+2.5466*log(hamameldaceae_bm$dbh.cm))))
fabaceae_juglandaceae_bm<-y%>%
filter(y$species.code %in% c('JUGNIG','ROBPSE'))
fabaceae_juglandaceae_bm<-fabaceae_juglandaceae_bm%>%
mutate(abovegroundbiomass = exp((-2.5095+2.5437*log(fabaceae_juglandaceae_bm$dbh.cm))))
magnoliaceae_bm<-y%>%
filter(y$species.code %in% c('LIRTUL', 'MAGACU'))
magnoliaceae_bm<-magnoliaceae_bm%>%
mutate(abovegroundbiomass = exp((-2.5497+2.5011*log(magnoliaceae_bm$dbh.cm))))
betulaceae_bm<-y%>%
filter(y$species.code %in% c('OSTVIR'))
betulaceae_bm<-betulaceae_bm%>%
mutate(abovegroundbiomass = exp((-2.2652+2.5349*log(betulaceae_bm$dbh.cm))))
pinus_greaterthanpointfourfive<-y%>%
filter(y$species.code %in% c('PINECH','PINVIR'))
pinus_greaterthanpointfourfive<-pinus_greaterthanpointfourfive%>%
mutate(abovegroundbiomass = exp((-3.0506+2.6465*log(pinus_greaterthanpointfourfive$dbh.cm))))
pinus_lessthanpointfourfive<-y%>%
filter(y$species.code %in% c('PINSTR'))
pinus_lessthanpointfourfive<-pinus_lessthanpointfourfive%>%
mutate(abovegroundbiomass = exp((-2.6177+2.4638*log(pinus_lessthanpointfourfive$dbh.cm))))
#Combine Taxonomic Groups
aboveground_biomass.df<-rbind(aceraceae_bm,cornaceae_etc_bm,fabaceae_carya_bm,fagaceae_decidious_bm,oleaceae_bm, hamameldaceae_bm, fabaceae_juglandaceae_bm, magnoliaceae_bm, betulaceae_bm,pinus_greaterthanpointfourfive, pinus_lessthanpointfourfive)
#Calculate Belowground Biomass and Total Biomass
EREN_biomass.df<-aboveground_biomass.df%>%
mutate(course.root.biomass = exp((-1.4485-0.03476*log(aboveground_biomass.df$dbh.cm))))%>%
mutate(fine.root.biomass = exp((-1.8629-0.77534*log(aboveground_biomass.df$dbh.cm))))%>%
mutate(tree.biomass = abovegroundbiomass+course.root.biomass+fine.root.biomass)
#Filter to desired data
#EREN_biomass.df<-EREN_biomass.df[,c('plot name','data colle', 'tree numbe', inventory, 'stem type',species.code, dbh.cm, 'abovegroundbiomass', 'course.root.biomass','fine.root.biomass', 'tree.biomass')]
#colnames(EREN_biomass.df)<-c('plot_name','date_collected', 'tree_number', inventory, 'stem_type','species_code', 'dbh_cm', 'aboveground_biomass', 'course_root_biomass','fine_root_biomass', 'tree_biomass')
#Filter to most recent dates
#EREN_biomass.df<-EREN_biomass.df%>%
#group_by(plot_name)%>%
#filter(date_collected == max(date_collected))
#Calulate Basal Area
EREN_biomass.df<-EREN_biomass.df%>%
mutate(basal_area = ((dbh.cm)^2)*0.00007854)
return(EREN_biomass.df)
}
#Install packages
library(dplyr)
library(reshape)
library(vegan)
library(labdsv)
#Calculate Relative Basal Area Per Species
volume<-tree.data%>%
mutate(basal.area = (dbh.cm^2)*0.0000785)%>%
group_by(plot.name, species.code)%>%
summarise(total.ba = sum(basal.area))%>%
mutate(relative.ba = prop.table(total.ba))
#Create Site x Species Matrix and Save as Dataframe
volume.sp <- cast(volume, plot.name ~ species.code, value='relative.ba', FUN=mean)
volume.sp < -as.data.frame(volume.sp)
volume.sp[is.na(volume.sp)] <- 0
#Make a Plot Legend
plot.legend<-volume.sp$plot_name
#Remove Plot name column
volume.sp<-volume.sp[,-1]
#Create distance matrix
volume.dist<-vegdist(volume.sp)
#Create Cluster
volume.clust<-hclust(volume.dist, method = "ward.D2")
#Create Dendrogram
plot(volume.clust, hang = -1)
#Create classes using cutree
rect.hclust(volume.clust, 4)
cut<-cutree(volume.clust,k = 4)
table(cut)
##Principal Coordinates Analysis
pcoa<-cmdscale(volume.dist)
#Plot
ordiplot(pcoa)
ordihull(pcoa, cut)
orditorp(pcoa,display="sites",cex=.7,air=.3, col = 'red')
ordispider(pcoa, cut, spiders = "centroid", label = T)
###Indicator Species
indc<-indval(volume.sp, cut)
summary(indc)
carbon.stock<-ggplot(plot_carbon_stock,aes(plot_name, carbon_stock, color = plot_name))+
geom_point()+
geom_hline(yintercept = mean(plot_carbon_stock$carbon_stock), linetype = "dashed", color = "red")+
labs(x= "Plot Name", y = "Carbon Stock (Mg/ha)", title = "Plot Carbon Stock")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), legend.position = "none")+
scale_color_discrete(name = "Forest Type")
plot.carbon.stock.forest.type<-ggplot(plot_carbon_stock,aes(plot_name, carbon_stock, color = indc_spp))+
geom_point()+
geom_hline(yintercept = mean(plot_carbon_stock$carbon_stock), linetype = "dashed", color = "red")+
labs(x= "Plot Name", y = "Carbon Stock (Mg/ha)", title = "Plot Carbon Stock")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), legend.position = "none")+
facet_grid(.~indc_spp, scales = "free", space = "free_x")+
scale_color_discrete(name = "Forest Type")
View(plot.carbon.stock.forest.type)
plot_carbon_stock%>%
group_by(indc_spp)%>%
shapiro_test(carbon_stock)
?shapiro.test
plot_carbon_stock%>%
group_by(indc_spp)%>%
shapiro.test(carbon_stock)
shapiro_test(residuals(forest_group.aov))
shapiro.test(residuals(forest_group.aov))
forest_group.aov<-aov(carbon_stock~indc_spp, plot_carbon_stock)
summary(forest_group.aov)
#Post Hoc Tukey
TukeyHSD(forest_group.aov)
shapiro.test(residuals(forest_group.aov))
bruh<-ggscatter(plot_carbon_stock, x = "ba_sqm_ha", y = "carbon_stock", color = "indc_spp", add = "reg.line")+
stat_regline_equation(aes(label =  paste(..eq.label..,..rr.label.., sep = "~~~~"), color = indc_spp), label.x.npc = 0.75, label.y.npc = 0.51, show.legend = F)+
labs(x = "Plot Basal Area sq. m/ha", y = " Carbon Stock Mg/ha")+
theme(legend.position = "right")
ggpar(bruh, legend.title = "Forest Type")
#size class
ggplot(all_plot, aes(size_class, tree_carbon_mg*forest_group_ef))+
geom_bar(stat = "identity")+
facet_wrap(~forest_group_spp)+
aes(fill = forest_group_spp)+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), legend.position = "none")+
labs(x =  "DBH (cm) Size Class", y = "Carbon (Mg/ha)", title = "Carbon Stock and Size Class")+
scale_fill_discrete(name = "Forest Type")
ggplot(plot_carbon_stock, aes(indc_spp, large_trees, fill = indc_spp))+
geom_boxplot()+
geom_point()+
labs(x = "Forest Type", y = "Carbon Stored In Trees DBH >= 50 cm", title = "Carbon Storage in Large Trees by Forest Type")+
theme(legend.position = "none")
bruh2<-ggscatter(plot_carbon_stock,x = "large_prop", y="carbon_stock",add = "reg.line")+
geom_point(aes(color = indc_spp))+
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),label.x = 0.17, label.y = 75)+
stat_regline_equation(label.x = 0.17, label.y = 100)+
theme(legend.position = "right")+
labs(x = "Proportion of Carbon in trees >50 cm DBH", y = "Carbon Stock (Mg/ha)")
tree.summary<-read.csv("tree.summary.csv")
ggplot(tree.summary,aes(dbh_cm))+
geom_histogram()+
facet_wrap(~forest_group_spp)
plot_carbon_stock%>%
group_by(indc_spp)%>%
identify_outliers(carbon_stock)
plot_carbon_stock%>%
group_by(indc_spp)%>%
shapiro.test(carbon_stock)
forest_group.aov<-aov(carbon_stock~indc_spp, plot_carbon_stock)
summary(forest_group.aov)
#Post Hoc Tukey
TukeyHSD(forest_group.aov)
plot_carbon_stock%>%
group_by(indc_spp)%>%
identify.outliers(carbon_stock)
?shapiro.test
class(plot_carbon_stock$carbon_stock)
plot_carbon_stock%>%
group_by(indc_spp)%>%
shapiro.test(carbon_stock)
shapiro.test(plot_carbon_stock$carbon_stock)
shapiro.test(residuals(forest_group.aov))
leveneTest(carbon_stock~indc_spp, plot_carbon_stock)
install.packages("car")
4
install.packages("car")
install.packages("car")
install.packages("car")
install.packages("car")
install.packages("car")
